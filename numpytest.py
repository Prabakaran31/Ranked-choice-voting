# Finding the result of preferential voting using numpy


import numpy as np
ballot = np.array([[5, 4, 2, 1, 3], [5, 2, 1, 3, 4], [4, 2, 3, 5, 1], [1, 2, 4, 5, 3], [5, 3, 1, 4, 2], [2, 4, 5, 1, 3], [1, 2, 4, 5, 3], [1, 4, 2, 3, 5], [2, 4, 5, 3, 1], [1, 2, 4, 3, 5], [1, 4, 2, 3, 5], [1, 4, 2, 3, 5], [1, 2, 4, 3, 5], [5, 4, 3, 1, 2], [1, 2, 3, 4, 5], [3, 4, 2, 1, 5], [1, 5, 4, 3, 2], [5, 3, 4, 2, 1], [5, 3, 4, 2, 1], [4, 3, 2, 5, 1], [3, 5, 2, 1, 4], [2, 4, 3, 1, 5], [4, 5, 1, 3, 2], [2, 1, 5, 3, 4], [1, 4, 2, 3, 5], [3, 4, 1, 2, 5], [5, 3, 2, 1, 4], [3, 4, 2, 1, 5], [5, 4, 1, 2, 3], [3, 2, 1, 5, 4], [5, 1, 2, 3, 4], [5, 4, 3, 1, 2], [5, 4, 3, 1, 2], [4, 3, 5, 1, 2], [2, 1, 5, 3, 4], [3, 1, 4, 5, 2], [1, 5, 2, 3, 4], [3, 5, 4, 2, 1], [1, 3, 4, 5, 2], [2, 3, 4, 5, 1], [3, 5, 2, 1, 4], [1, 5, 3, 4, 2], [1, 2, 3, 4, 5], [5, 1, 2, 3, 4], [1, 3, 4, 2, 5], [2, 1, 5, 3, 4], [4, 3, 2, 5, 1], [5, 3, 4, 1, 2], [5, 2, 1, 4, 3], [5, 3, 4, 2, 1], [1, 4, 3, 2, 5], [3, 2, 4, 5, 1], [1, 3, 4, 5, 2], [2, 5, 4, 1, 3], [2, 3, 5, 4, 1], [3, 4, 1, 2, 5], [3, 2, 1, 5, 4], [5, 1, 4, 2, 3], [1, 3, 2, 5, 4], [1, 3, 2, 5, 4], [5, 1, 2, 3, 4], [4, 5, 2, 3, 1], [4, 3, 1, 5, 2], [5, 3, 1, 4, 2], [1, 5, 2, 4, 3], [2, 3, 1, 5, 4], [1, 4, 3, 5, 2], [1, 5, 4, 3, 2], [2, 5, 4, 3, 1], [5, 1, 3, 4, 2], [4, 2, 5, 1, 3], [5, 2, 3, 1, 4], [2, 3, 5, 1, 4], [5, 3, 2, 1, 4], [2, 4, 1, 5, 3], [2, 3, 4, 1, 5], [4, 5, 3, 1, 2], [1, 4, 5, 2, 3], [1, 5, 2, 4, 3], [5, 2, 3, 4, 1], [2, 3, 4, 1, 5], [4, 2, 5, 1, 3], [3, 5, 1, 2, 4], [4, 2, 5, 3, 1], [3, 2, 5, 1, 4], [2, 1, 4, 5, 3], [5, 1, 3, 4, 2], [1, 5, 3, 2, 4], [5, 1, 3, 2, 4], [4, 2, 5, 3, 1], [1, 5, 3, 4, 2], [2, 1, 3, 5, 4], [5, 3, 1, 4, 2], [2, 3, 4, 5, 1], [2, 5, 1, 3, 4], [3, 4, 2, 5, 1], [2, 1, 5, 3, 4], [2, 5, 1, 4, 3], [1, 2, 5, 3, 4], [4, 1, 5, 2, 3], [4, 2, 5, 3, 1], [2, 1, 3, 5, 4], [2, 4, 3, 1, 5], [3, 1, 5, 2, 4], [1, 2, 4, 5, 3], [5, 3, 2, 1, 4], [2, 4, 5, 3, 1], [1, 3, 5, 4, 2], [3, 4, 2, 5, 1], [2, 3, 5, 4, 1], [2, 1, 5, 3, 4]])
cand = ['A', 'B', 'C', 'D', 'E']
print(ballot.shape)
counts = np.count_nonzero(ballot == 1, axis=0)

flag = 0
while np.max(counts) < 55:
    print(cand)
    print(counts)
    mini = np.where(counts == np.min(counts))[0][0]
    for i in range(111):
        for j in range(5-flag):
            if ballot[i][j] > ballot[i][mini]:
                ballot[i][j] -= 1
    ballot = np.delete(ballot, mini, axis=1)
    print(cand[mini] + ' is removed from race')
    cand.pop(mini)
    flag += 1
    counts = np.count_nonzero(ballot == 1, axis=0)
print(counts)
if np.max(counts) > 55:
    maxi = np.where(counts == np.max(counts))[0][0]
    print(f'{cand[maxi]} is the winner')
